version: '3'

services:
  web:
    container_name: dev
    build:
      context: .
      dockerfile: Dockerfile
      target: web
    env_file:
    - ./secrets/ops_app_dev.env
    volumes:
    - ./mounts/logs/:/ebs/logs/
    - ./:/srv/code/dev
    - access_modules:/srv/code/dev/Access/access_modules
    - database_store:/srv/code/dev/db
    ports:
    - 8000:8000
    depends_on:
    - db
    command: >
      bash -c "echo Starting Django runserver;
      python manage.py runserver 0.0.0.0:8000"
  db:
    container_name: db
    image: mysql/mysql-server:8.0.31
    ports:
    - 3306:3306
    env_file:
    - ./secrets/ops_mysql_dev.env
    volumes:
    - database_store:/var/lib/mysql
  redis:
    container_name: redis
    image: redis:alpine
    command: --port 6379
    ports:
    - 6379:6379
  celery:
    container_name: celery
    build:
      context: .
      dockerfile: Dockerfile
      target: web
    volumes:
    - access_modules_celery:/srv/code/dev/Access/access_modules
    - database_store:/srv/code/dev/db
    env_file:
    - ./secrets/ops_app_celery.env
    depends_on:
    - db
    - redis
    - web
    command: >
      bash -c "
      echo Starting celery;
      python3 -m celery -A EnigmaAutomation worker -n worker1 -l DEBUG"
  test:
    container_name: test
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    env_file:
    - ./secrets/ops_app_test.env
    volumes:
    - .:/srv/code/dev
    - ./mounts/logs/:/ebs/logs/
volumes:
  access_modules:
  access_modules_celery:
  database_store:
